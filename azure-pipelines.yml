# azure-pipelines.yml
trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  TF_VERSION: '1.5.7'

steps:
# Install Terraform (latest extension v1)
- task: HashiCorpToolInstaller@1
  displayName: 'Install Terraform'
  inputs:
    terraformVersion: $(TF_VERSION)

# Terraform Init (uses Azure service connection)
- task: TerraformCLI@1
  displayName: 'Terraform Init'
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    environmentServiceNameAzureRM: 'azure-connection'   # <-- change this

# Terraform Plan
- task: TerraformCLI@1
  displayName: 'Terraform Plan'
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    environmentServiceNameAzureRM: 'azure-connection'   # <-- change this
    additionalArguments: >
      -var="subscription_id=$(AZURE_SUBSCRIPTION_ID)"
      -var="client_id=$(AZURE_CLIENT_ID)"
      -var="client_secret=$(AZURE_CLIENT_SECRET)"
      -var="tenant_id=$(AZURE_TENANT_ID)"

# Terraform Apply (auto-approve)
- task: TerraformCLI@1
  displayName: 'Terraform Apply'
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    environmentServiceNameAzureRM: 'azure-connection'   # <-- change this
    commandOptions: '-auto-approve'
    additionalArguments: >
      -var="subscription_id=$(AZURE_SUBSCRIPTION_ID)"
      -var="client_id=$(AZURE_CLIENT_ID)"
      -var="client_secret=$(AZURE_CLIENT_SECRET)"
      -var="tenant_id=$(AZURE_TENANT_ID)"
